!function (a, b, c) { !function (a) { "use strict"; "function" == typeof define && define.amd ? define(["jquery"], a) : jQuery && !jQuery.fn.qtip && a(jQuery) }(function (d) { "use strict"; function e(a, b, c, e) { this.id = c, this.target = a, this.tooltip = F, this.elements = { target: a }, this._id = S + "-" + c, this.timers = { img: {} }, this.options = b, this.plugins = {}, this.cache = { event: {}, target: d(), disabled: E, attr: e, onTooltip: E, lastClass: "" }, this.rendered = this.destroyed = this.disabled = this.waiting = this.hiddenDuringWait = this.positioning = this.triggering = E } function f(a) { return a === F || "object" !== d.type(a) } function g(a) { return !(d.isFunction(a) || a && a.attr || a.length || "object" === d.type(a) && (a.jquery || a.then)) } function h(a) { var b, c, e, h; return f(a) ? E : (f(a.metadata) && (a.metadata = { type: a.metadata }), "content" in a && (b = a.content, f(b) || b.jquery || b.done ? (c = g(b) ? E : b, b = a.content = { text: c }) : c = b.text, "ajax" in b && (e = b.ajax, h = e && e.once !== E, delete b.ajax, b.text = function (a, b) { var f = c || d(this).attr(b.options.content.attr) || "Loading...", g = d.ajax(d.extend({}, e, { context: b })).then(e.success, F, e.error).then(function (a) { return a && h && b.set("content.text", a), a }, function (a, c, d) { b.destroyed || 0 === a.status || b.set("content.text", c + ": " + d) }); return h ? f : (b.set("content.text", f), g) }), "title" in b && (d.isPlainObject(b.title) && (b.button = b.title.button, b.title = b.title.text), g(b.title || E) && (b.title = E))), "position" in a && f(a.position) && (a.position = { my: a.position, at: a.position }), "show" in a && f(a.show) && (a.show = a.show.jquery ? { target: a.show } : a.show === D ? { ready: D } : { event: a.show }), "hide" in a && f(a.hide) && (a.hide = a.hide.jquery ? { target: a.hide } : { event: a.hide }), "style" in a && f(a.style) && (a.style = { classes: a.style }), d.each(R, function () { this.sanitize && this.sanitize(a) }), a) } function i(a, b) { for (var c, d = 0, e = a, f = b.split("."); e = e[f[d++]];)d < f.length && (c = e); return [c || a, f.pop()] } function j(a, b) { var c, d, e; for (c in this.checks) if (this.checks.hasOwnProperty(c)) for (d in this.checks[c]) this.checks[c].hasOwnProperty(d) && (e = new RegExp(d, "i").exec(a)) && (b.push(e), ("builtin" === c || this.plugins[c]) && this.checks[c][d].apply(this.plugins[c] || this, b)) } function k(a) { return V.concat("").join(a ? "-" + a + " " : " ") } function l(a, b) { return b > 0 ? setTimeout(d.proxy(a, this), b) : void a.call(this) } function m(a) { this.tooltip.hasClass(aa) || (clearTimeout(this.timers.show), clearTimeout(this.timers.hide), this.timers.show = l.call(this, function () { this.toggle(D, a) }, this.options.show.delay)) } function n(a) { if (!this.tooltip.hasClass(aa) && !this.destroyed) { var b = d(a.relatedTarget), c = b.closest(W)[0] === this.tooltip[0], e = b[0] === this.options.show.target[0]; if (clearTimeout(this.timers.show), clearTimeout(this.timers.hide), this !== b[0] && "mouse" === this.options.position.target && c || this.options.hide.fixed && /mouse(out|leave|move)/.test(a.type) && (c || e)) try { a.preventDefault(), a.stopImmediatePropagation() } catch (f) { } else this.timers.hide = l.call(this, function () { this.toggle(E, a) }, this.options.hide.delay, this) } } function o(a) { !this.tooltip.hasClass(aa) && this.options.hide.inactive && (clearTimeout(this.timers.inactive), this.timers.inactive = l.call(this, function () { this.hide(a) }, this.options.hide.inactive)) } function p(a) { this.rendered && this.tooltip[0].offsetWidth > 0 && this.reposition(a) } function q(a, c, e) { d(b.body).delegate(a, (c.split ? c : c.join("." + S + " ")) + "." + S, function () { var a = y.api[d.attr(this, U)]; a && !a.disabled && e.apply(a, arguments) }) } function r(a, c, f) { var g, i, j, k, l, m = d(b.body), n = a[0] === b ? m : a, o = a.metadata ? a.metadata(f.metadata) : F, p = "html5" === f.metadata.type && o ? o[f.metadata.name] : F, q = a.data(f.metadata.name || "qtipopts"); try { q = "string" == typeof q ? d.parseJSON(q) : q } catch (r) { } if (k = d.extend(D, {}, y.defaults, f, "object" == typeof q ? h(q) : F, h(p || o)), i = k.position, k.id = c, "boolean" == typeof k.content.text) { if (j = a.attr(k.content.attr), k.content.attr === E || !j) return E; k.content.text = j } if (i.container.length || (i.container = m), i.target === E && (i.target = n), k.show.target === E && (k.show.target = n), k.show.solo === D && (k.show.solo = i.container.closest("body")), k.hide.target === E && (k.hide.target = n), k.position.viewport === D && (k.position.viewport = i.container), i.container = i.container.eq(0), i.at = new A(i.at, D), i.my = new A(i.my), a.data(S)) if (k.overwrite) a.qtip("destroy", !0); else if (k.overwrite === E) return E; return a.attr(T, c), k.suppress && (l = a.attr("title")) && a.removeAttr("title").attr(ca, l).attr("title", ""), g = new e(a, k, c, !!j), a.data(S, g), g } function s(a) { return a.charAt(0).toUpperCase() + a.slice(1) } function t(a, b) { var d, e, f = b.charAt(0).toUpperCase() + b.slice(1), g = (b + " " + va.join(f + " ") + f).split(" "), h = 0; if (ua[b]) return a.css(ua[b]); for (; d = g[h++];)if ((e = a.css(d)) !== c) return ua[b] = d, e } function u(a, b) { return Math.ceil(parseFloat(t(a, b))) } function v(a, b) { this._ns = "tip", this.options = b, this.offset = b.offset, this.size = [b.width, b.height], this.qtip = a, this.init(a) } function w(a, b) { this.options = b, this._ns = "-modal", this.qtip = a, this.init(a) } function x(a) { this._ns = "ie6", this.qtip = a, this.init(a) } var y, z, A, B, C, D = !0, E = !1, F = null, G = "x", H = "y", I = "width", J = "height", K = "top", L = "left", M = "bottom", N = "right", O = "center", P = "flipinvert", Q = "shift", R = {}, S = "qtip", T = "data-hasqtip", U = "data-qtip-id", V = ["ui-widget", "ui-tooltip"], W = "." + S, X = "click dblclick mousedown mouseup mousemove mouseleave mouseenter".split(" "), Y = S + "-fixed", Z = S + "-default", $ = S + "-focus", _ = S + "-hover", aa = S + "-disabled", ba = "_replacedByqTip", ca = "oldtitle", da = { ie: function () { var a, c; for (a = 4, c = b.createElement("div"); (c.innerHTML = "<!--[if gt IE " + a + "]><i></i><![endif]-->") && c.getElementsByTagName("i")[0]; a += 1); return a > 4 ? a : NaN }(), iOS: parseFloat(("" + (/CPU.*OS ([0-9_]{1,5})|(CPU like).*AppleWebKit.*Mobile/i.exec(navigator.userAgent) || [0, ""])[1]).replace("undefined", "3_2").replace("_", ".").replace("_", "")) || E }; z = e.prototype, z._when = function (a) { return d.when.apply(d, a) }, z.render = function (a) { if (this.rendered || this.destroyed) return this; var b = this, c = this.options, e = this.cache, f = this.elements, g = c.content.text, h = c.content.title, i = c.content.button, j = c.position, k = []; return d.attr(this.target[0], "aria-describedby", this._id), e.posClass = this._createPosClass((this.position = { my: j.my, at: j.at }).my), this.tooltip = f.tooltip = d("<div/>", { id: this._id, "class": [S, Z, c.style.classes, e.posClass].join(" "), width: c.style.width || "", height: c.style.height || "", tracking: "mouse" === j.target && j.adjust.mouse, role: "alert", "aria-live": "polite", "aria-atomic": E, "aria-describedby": this._id + "-content", "aria-hidden": D }).toggleClass(aa, this.disabled).attr(U, this.id).data(S, this).appendTo(j.container).append(f.content = d("<div />", { "class": S + "-content", id: this._id + "-content", "aria-atomic": D })), this.rendered = -1, this.positioning = D, h && (this._createTitle(), d.isFunction(h) || k.push(this._updateTitle(h, E))), i && this._createButton(), d.isFunction(g) || k.push(this._updateContent(g, E)), this.rendered = D, this._setWidget(), d.each(R, function (a) { var c; "render" === this.initialize && (c = this(b)) && (b.plugins[a] = c) }), this._unassignEvents(), this._assignEvents(), this._when(k).then(function () { b._trigger("render"), b.positioning = E, b.hiddenDuringWait || !c.show.ready && !a || b.toggle(D, e.event, E), b.hiddenDuringWait = E }), y.api[this.id] = this, this }, z.destroy = function (a) { function b() { if (!this.destroyed) { this.destroyed = D; var a, b = this.target, c = b.attr(ca); this.rendered && this.tooltip.stop(1, 0).find("*").remove().end().remove(), d.each(this.plugins, function () { this.destroy && this.destroy() }); for (a in this.timers) this.timers.hasOwnProperty(a) && clearTimeout(this.timers[a]); b.removeData(S).removeAttr(U).removeAttr(T).removeAttr("aria-describedby"), this.options.suppress && c && b.attr("title", c).removeAttr(ca), this._unassignEvents(), this.options = this.elements = this.cache = this.timers = this.plugins = this.mouse = F, delete y.api[this.id] } } return this.destroyed ? this.target : (a === D && "hide" !== this.triggering || !this.rendered ? b.call(this) : (this.tooltip.one("tooltiphidden", d.proxy(b, this)), !this.triggering && this.hide()), this.target) }, B = z.checks = { builtin: { "^id$": function (a, b, c, e) { var f = c === D ? y.nextid : c, g = S + "-" + f; f !== E && f.length > 0 && !d("#" + g).length ? (this._id = g, this.rendered && (this.tooltip[0].id = this._id, this.elements.content[0].id = this._id + "-content", this.elements.title[0].id = this._id + "-title")) : a[b] = e }, "^prerender": function (a, b, c) { c && !this.rendered && this.render(this.options.show.ready) }, "^content.text$": function (a, b, c) { this._updateContent(c) }, "^content.attr$": function (a, b, c, d) { this.options.content.text === this.target.attr(d) && this._updateContent(this.target.attr(c)) }, "^content.title$": function (a, b, c) { return c ? (c && !this.elements.title && this._createTitle(), void this._updateTitle(c)) : this._removeTitle() }, "^content.button$": function (a, b, c) { this._updateButton(c) }, "^content.title.(text|button)$": function (a, b, c) { this.set("content." + b, c) }, "^position.(my|at)$": function (a, b, c) { "string" == typeof c && (this.position[b] = a[b] = new A(c, "at" === b)) }, "^position.container$": function (a, b, c) { this.rendered && this.tooltip.appendTo(c) }, "^show.ready$": function (a, b, c) { c && (!this.rendered && this.render(D) || this.toggle(D)) }, "^style.classes$": function (a, b, c, d) { this.rendered && this.tooltip.removeClass(d).addClass(c) }, "^style.(width|height)": function (a, b, c) { this.rendered && this.tooltip.css(b, c) }, "^style.widget|content.title": function () { this.rendered && this._setWidget() }, "^style.def": function (a, b, c) { this.rendered && this.tooltip.toggleClass(Z, !!c) }, "^events.(render|show|move|hide|focus|blur)$": function (a, b, c) { this.rendered && this.tooltip[(d.isFunction(c) ? "" : "un") + "bind"]("tooltip" + b, c) }, "^(show|hide|position).(event|target|fixed|inactive|leave|distance|viewport|adjust)": function () { if (this.rendered) { var a = this.options.position; this.tooltip.attr("tracking", "mouse" === a.target && a.adjust.mouse), this._unassignEvents(), this._assignEvents() } } } }, z.get = function (a) { if (this.destroyed) return this; var b = i(this.options, a.toLowerCase()), c = b[0][b[1]]; return c.precedance ? c.string() : c }; var ea = /^position\.(my|at|adjust|target|container|viewport)|style|content|show\.ready/i, fa = /^prerender|show\.ready/i; z.set = function (a, b) { if (this.destroyed) return this; var c, e = this.rendered, f = E, g = this.options; return "string" == typeof a ? (c = a, a = {}, a[c] = b) : a = d.extend({}, a), d.each(a, function (b, c) { if (e && fa.test(b)) return void delete a[b]; var h, j = i(g, b.toLowerCase()); h = j[0][j[1]], j[0][j[1]] = c && c.nodeType ? d(c) : c, f = ea.test(b) || f, a[b] = [j[0], j[1], c, h] }), h(g), this.positioning = D, d.each(a, d.proxy(j, this)), this.positioning = E, this.rendered && this.tooltip[0].offsetWidth > 0 && f && this.reposition("mouse" === g.position.target ? F : this.cache.event), this }, z._update = function (a, b) { var c = this, e = this.cache; return this.rendered && a ? (d.isFunction(a) && (a = a.call(this.elements.target, e.event, this) || ""), d.isFunction(a.then) ? (e.waiting = D, a.then(function (a) { return e.waiting = E, c._update(a, b) }, F, function (a) { return c._update(a, b) })) : a === E || !a && "" !== a ? E : (a.jquery && a.length > 0 ? b.empty().append(a.css({ display: "block", visibility: "visible" })) : b.html(a), this._waitForContent(b).then(function (a) { c.rendered && c.tooltip[0].offsetWidth > 0 && c.reposition(e.event, !a.length) }))) : E }, z._waitForContent = function (a) { var b = this.cache; return b.waiting = D, (d.fn.imagesLoaded ? a.imagesLoaded() : (new d.Deferred).resolve([])).done(function () { b.waiting = E }).promise() }, z._updateContent = function (a, b) { this._update(a, this.elements.content, b) }, z._updateTitle = function (a, b) { this._update(a, this.elements.title, b) === E && this._removeTitle(E) }, z._createTitle = function () { var a = this.elements, b = this._id + "-title"; a.titlebar && this._removeTitle(), a.titlebar = d("<div />", { "class": S + "-titlebar " + (this.options.style.widget ? k("header") : "") }).append(a.title = d("<div />", { id: b, "class": S + "-title", "aria-atomic": D })).insertBefore(a.content).delegate(".qtip-close", "mousedown keydown mouseup keyup mouseout", function (a) { d(this).toggleClass("ui-state-active ui-state-focus", "down" === a.type.substr(-4)) }).delegate(".qtip-close", "mouseover mouseout", function (a) { d(this).toggleClass("ui-state-hover", "mouseover" === a.type) }), this.options.content.button && this._createButton() }, z._removeTitle = function (a) { var b = this.elements; b.title && (b.titlebar.remove(), b.titlebar = b.title = b.button = F, a !== E && this.reposition()) }, z._createPosClass = function (a) { return S + "-pos-" + (a || this.options.position.my).abbrev() }, z.reposition = function (c, e) { if (!this.rendered || this.positioning || this.destroyed) return this; this.positioning = D; var f, g, h, i, j = this.cache, k = this.tooltip, l = this.options.position, m = l.target, n = l.my, o = l.at, p = l.viewport, q = l.container, r = l.adjust, s = r.method.split(" "), t = k.outerWidth(E), u = k.outerHeight(E), v = 0, w = 0, x = k.css("position"), y = { left: 0, top: 0 }, z = k[0].offsetWidth > 0, A = c && "scroll" === c.type, B = d(a), C = q[0].ownerDocument, F = this.mouse; if (d.isArray(m) && 2 === m.length) o = { x: L, y: K }, y = { left: m[0], top: m[1] }; else if ("mouse" === m) o = { x: L, y: K }, (!r.mouse || this.options.hide.distance) && j.origin && j.origin.pageX ? c = j.origin : !c || c && ("resize" === c.type || "scroll" === c.type) ? c = j.event : F && F.pageX && (c = F), "static" !== x && (y = q.offset()), C.body.offsetWidth !== (a.innerWidth || C.documentElement.clientWidth) && (g = d(b.body).offset()), y = { left: c.pageX - y.left + (g && g.left || 0), top: c.pageY - y.top + (g && g.top || 0) }, r.mouse && A && F && (y.left -= (F.scrollX || 0) - B.scrollLeft(), y.top -= (F.scrollY || 0) - B.scrollTop()); else { if ("event" === m ? c && c.target && "scroll" !== c.type && "resize" !== c.type ? j.target = d(c.target) : c.target || (j.target = this.elements.target) : "event" !== m && (j.target = d(m.jquery ? m : this.elements.target)), m = j.target, m = d(m).eq(0), 0 === m.length) return this; m[0] === b || m[0] === a ? (v = da.iOS ? a.innerWidth : m.width(), w = da.iOS ? a.innerHeight : m.height(), m[0] === a && (y = { top: (p || m).scrollTop(), left: (p || m).scrollLeft() })) : R.imagemap && m.is("area") ? f = R.imagemap(this, m, o, R.viewport ? s : E) : R.svg && m && m[0].ownerSVGElement ? f = R.svg(this, m, o, R.viewport ? s : E) : (v = m.outerWidth(E), w = m.outerHeight(E), y = m.offset()), f && (v = f.width, w = f.height, g = f.offset, y = f.position), y = this.reposition.offset(m, y, q), (da.iOS > 3.1 && da.iOS < 4.1 || da.iOS >= 4.3 && da.iOS < 4.33 || !da.iOS && "fixed" === x) && (y.left -= B.scrollLeft(), y.top -= B.scrollTop()), (!f || f && f.adjustable !== E) && (y.left += o.x === N ? v : o.x === O ? v / 2 : 0, y.top += o.y === M ? w : o.y === O ? w / 2 : 0) } return y.left += r.x + (n.x === N ? -t : n.x === O ? -t / 2 : 0), y.top += r.y + (n.y === M ? -u : n.y === O ? -u / 2 : 0), R.viewport ? (h = y.adjusted = R.viewport(this, y, l, v, w, t, u), g && h.left && (y.left += g.left), g && h.top && (y.top += g.top), h.my && (this.position.my = h.my)) : y.adjusted = { left: 0, top: 0 }, j.posClass !== (i = this._createPosClass(this.position.my)) && (j.posClass = i, k.removeClass(j.posClass).addClass(i)), this._trigger("move", [y, p.elem || p], c) ? (delete y.adjusted, e === E || !z || isNaN(y.left) || isNaN(y.top) || "mouse" === m || !d.isFunction(l.effect) ? k.css(y) : d.isFunction(l.effect) && (l.effect.call(k, this, d.extend({}, y)), k.queue(function (a) { d(this).css({ opacity: "", height: "" }), da.ie && this.style.removeAttribute("filter"), a() })), this.positioning = E, this) : this }, z.reposition.offset = function (a, c, e) { function f(a, b) { c.left += b * a.scrollLeft(), c.top += b * a.scrollTop() } if (!e[0]) return c; var g, h, i, j, k = d(a[0].ownerDocument), l = !!da.ie && "CSS1Compat" !== b.compatMode, m = e[0]; do "static" !== (h = d.css(m, "position")) && ("fixed" === h ? (i = m.getBoundingClientRect(), f(k, -1)) : (i = d(m).position(), i.left += parseFloat(d.css(m, "borderLeftWidth")) || 0, i.top += parseFloat(d.css(m, "borderTopWidth")) || 0), c.left -= i.left + (parseFloat(d.css(m, "marginLeft")) || 0), c.top -= i.top + (parseFloat(d.css(m, "marginTop")) || 0), g || "hidden" === (j = d.css(m, "overflow")) || "visible" === j || (g = d(m))); while (m = m.offsetParent); return g && (g[0] !== k[0] || l) && f(g, 1), c }; var ga = (A = z.reposition.Corner = function (a, b) { a = ("" + a).replace(/([A-Z])/, " $1").replace(/middle/gi, O).toLowerCase(), this.x = (a.match(/left|right/i) || a.match(/center/) || ["inherit"])[0].toLowerCase(), this.y = (a.match(/top|bottom|center/i) || ["inherit"])[0].toLowerCase(), this.forceY = !!b; var c = a.charAt(0); this.precedance = "t" === c || "b" === c ? H : G }).prototype; ga.invert = function (a, b) { this[a] = this[a] === L ? N : this[a] === N ? L : b || this[a] }, ga.string = function (a) { var b = this.x, c = this.y, d = b !== c ? "center" === b || "center" !== c && (this.precedance === H || this.forceY) ? [c, b] : [b, c] : [b]; return a !== !1 ? d.join(" ") : d }, ga.abbrev = function () { var a = this.string(!1); return a[0].charAt(0) + (a[1] && a[1].charAt(0) || "") }, ga.clone = function () { return new A(this.string(), this.forceY) }, z.toggle = function (a, c) { var e = this.cache, f = this.options, g = this.tooltip; if (c) { if (/over|enter/.test(c.type) && e.event && /out|leave/.test(e.event.type) && f.show.target.add(c.target).length === f.show.target.length && g.has(c.relatedTarget).length) return this; e.event = d.event.fix(c) } if (this.waiting && !a && (this.hiddenDuringWait = D), !this.rendered) return a ? this.render(1) : this; if (this.destroyed || this.disabled) return this; var h, i, j, k = a ? "show" : "hide", l = this.options[k], m = this.options.position, n = this.options.content, o = this.tooltip.css("width"), p = this.tooltip.is(":visible"), q = a || 1 === l.target.length, r = !c || l.target.length < 2 || e.target[0] === c.target; return (typeof a).search("boolean|number") && (a = !p), h = !g.is(":animated") && p === a && r, i = h ? F : !!this._trigger(k, [90]), this.destroyed ? this : (i !== E && a && this.focus(c), !i || h ? this : (d.attr(g[0], "aria-hidden", !a), a ? (this.mouse && (e.origin = d.event.fix(this.mouse)), d.isFunction(n.text) && this._updateContent(n.text, E), d.isFunction(n.title) && this._updateTitle(n.title, E), !C && "mouse" === m.target && m.adjust.mouse && (d(b).bind("mousemove." + S, this._storeMouse), C = D), o || g.css("width", g.outerWidth(E)), this.reposition(c, arguments[2]), o || g.css("width", ""), l.solo && ("string" == typeof l.solo ? d(l.solo) : d(W, l.solo)).not(g).not(l.target).qtip("hide", new d.Event("tooltipsolo"))) : (clearTimeout(this.timers.show), delete e.origin, C && !d(W + '[tracking="true"]:visible', l.solo).not(g).length && (d(b).unbind("mousemove." + S), C = E), this.blur(c)), j = d.proxy(function () { a ? (da.ie && g[0].style.removeAttribute("filter"), g.css("overflow", ""), "string" == typeof l.autofocus && d(this.options.show.autofocus, g).focus(), this.options.show.target.trigger("qtip-" + this.id + "-inactive")) : g.css({ display: "", visibility: "", opacity: "", left: "", top: "" }), this._trigger(a ? "visible" : "hidden") }, this), l.effect === E || q === E ? (g[k](), j()) : d.isFunction(l.effect) ? (g.stop(1, 1), l.effect.call(g, this), g.queue("fx", function (a) { j(), a() })) : g.fadeTo(90, a ? 1 : 0, j), a && l.target.trigger("qtip-" + this.id + "-inactive"), this)) }, z.show = function (a) { return this.toggle(D, a) }, z.hide = function (a) { return this.toggle(E, a) }, z.focus = function (a) { if (!this.rendered || this.destroyed) return this; var b = d(W), c = this.tooltip, e = parseInt(c[0].style.zIndex, 10), f = y.zindex + b.length; return c.hasClass($) || this._trigger("focus", [f], a) && (e !== f && (b.each(function () { this.style.zIndex > e && (this.style.zIndex = this.style.zIndex - 1) }), b.filter("." + $).qtip("blur", a)), c.addClass($)[0].style.zIndex = f), this }, z.blur = function (a) { return !this.rendered || this.destroyed ? this : (this.tooltip.removeClass($), this._trigger("blur", [this.tooltip.css("zIndex")], a), this) }, z.disable = function (a) { return this.destroyed ? this : ("toggle" === a ? a = !(this.rendered ? this.tooltip.hasClass(aa) : this.disabled) : "boolean" != typeof a && (a = D), this.rendered && this.tooltip.toggleClass(aa, a).attr("aria-disabled", a), this.disabled = !!a, this) }, z.enable = function () { return this.disable(E) }, z._createButton = function () { var a = this, b = this.elements, c = b.tooltip, e = this.options.content.button, f = "string" == typeof e, g = f ? e : "Close tooltip"; b.button && b.button.remove(), e.jquery ? b.button = e : b.button = d("<a />", { "class": "qtip-close " + (this.options.style.widget ? "" : S + "-icon"), title: g, "aria-label": g }).prepend(d("<span />", { "class": "ui-icon ui-icon-close", html: "&times;" })), b.button.appendTo(b.titlebar || c).attr("role", "button").click(function (b) { return c.hasClass(aa) || a.hide(b), E }) }, z._updateButton = function (a) { if (!this.rendered) return E; var b = this.elements.button; a ? this._createButton() : b.remove() }, z._setWidget = function () { var a = this.options.style.widget, b = this.elements, c = b.tooltip, d = c.hasClass(aa); c.removeClass(aa), aa = a ? "ui-state-disabled" : "qtip-disabled", c.toggleClass(aa, d), c.toggleClass("ui-helper-reset " + k(), a).toggleClass(Z, this.options.style.def && !a), b.content && b.content.toggleClass(k("content"), a), b.titlebar && b.titlebar.toggleClass(k("header"), a), b.button && b.button.toggleClass(S + "-icon", !a) }, z._storeMouse = function (a) { return (this.mouse = d.event.fix(a)).type = "mousemove", this }, z._bind = function (a, b, c, e, f) { if (a && c && b.length) { var g = "." + this._id + (e ? "-" + e : ""); return d(a).bind((b.split ? b : b.join(g + " ")) + g, d.proxy(c, f || this)), this } }, z._unbind = function (a, b) { return a && d(a).unbind("." + this._id + (b ? "-" + b : "")), this }, z._trigger = function (a, b, c) { var e = new d.Event("tooltip" + a); return e.originalEvent = c && d.extend({}, c) || this.cache.event || F, this.triggering = a, this.tooltip.trigger(e, [this].concat(b || [])), this.triggering = E, !e.isDefaultPrevented() }, z._bindEvents = function (a, b, c, e, f, g) { var h = c.filter(e).add(e.filter(c)), i = []; h.length && (d.each(b, function (b, c) { var e = d.inArray(c, a); e > -1 && i.push(a.splice(e, 1)[0]) }), i.length && (this._bind(h, i, function (a) { var b = this.rendered ? this.tooltip[0].offsetWidth > 0 : !1; (b ? g : f).call(this, a) }), c = c.not(h), e = e.not(h))), this._bind(c, a, f), this._bind(e, b, g) }, z._assignInitialEvents = function (a) { function b(a) { return this.disabled || this.destroyed ? E : (this.cache.event = a && d.event.fix(a), this.cache.target = a && d(a.target), clearTimeout(this.timers.show), void (this.timers.show = l.call(this, function () { this.render("object" == typeof a || c.show.ready) }, c.prerender ? 0 : c.show.delay))) } var c = this.options, e = c.show.target, f = c.hide.target, g = c.show.event ? d.trim("" + c.show.event).split(" ") : [], h = c.hide.event ? d.trim("" + c.hide.event).split(" ") : []; this._bind(this.elements.target, ["remove", "removeqtip"], function () { this.destroy(!0) }, "destroy"), /mouse(over|enter)/i.test(c.show.event) && !/mouse(out|leave)/i.test(c.hide.event) && h.push("mouseleave"), this._bind(e, "mousemove", function (a) { this._storeMouse(a), this.cache.onTarget = D }), this._bindEvents(g, h, e, f, b, function () { return this.timers ? void clearTimeout(this.timers.show) : E }), (c.show.ready || c.prerender) && b.call(this, a) }, z._assignEvents = function () { var c = this, e = this.options, f = e.position, g = this.tooltip, h = e.show.target, i = e.hide.target, j = f.container, k = f.viewport, l = d(b), q = d(a), r = e.show.event ? d.trim("" + e.show.event).split(" ") : [], s = e.hide.event ? d.trim("" + e.hide.event).split(" ") : []; d.each(e.events, function (a, b) { c._bind(g, "toggle" === a ? ["tooltipshow", "tooltiphide"] : ["tooltip" + a], b, null, g) }), /mouse(out|leave)/i.test(e.hide.event) && "window" === e.hide.leave && this._bind(l, ["mouseout", "blur"], function (a) { /select|option/.test(a.target.nodeName) || a.relatedTarget || this.hide(a) }), e.hide.fixed ? i = i.add(g.addClass(Y)) : /mouse(over|enter)/i.test(e.show.event) && this._bind(i, "mouseleave", function () { clearTimeout(this.timers.show) }), ("" + e.hide.event).indexOf("unfocus") > -1 && this._bind(j.closest("html"), ["mousedown", "touchstart"], function (a) { var b = d(a.target), c = this.rendered && !this.tooltip.hasClass(aa) && this.tooltip[0].offsetWidth > 0, e = b.parents(W).filter(this.tooltip[0]).length > 0; b[0] === this.target[0] || b[0] === this.tooltip[0] || e || this.target.has(b[0]).length || !c || this.hide(a) }), "number" == typeof e.hide.inactive && (this._bind(h, "qtip-" + this.id + "-inactive", o, "inactive"), this._bind(i.add(g), y.inactiveEvents, o)), this._bindEvents(r, s, h, i, m, n), this._bind(h.add(g), "mousemove", function (a) { if ("number" == typeof e.hide.distance) { var b = this.cache.origin || {}, c = this.options.hide.distance, d = Math.abs; (d(a.pageX - b.pageX) >= c || d(a.pageY - b.pageY) >= c) && this.hide(a) } this._storeMouse(a) }), "mouse" === f.target && f.adjust.mouse && (e.hide.event && this._bind(h, ["mouseenter", "mouseleave"], function (a) { return this.cache ? void (this.cache.onTarget = "mouseenter" === a.type) : E }), this._bind(l, "mousemove", function (a) { this.rendered && this.cache.onTarget && !this.tooltip.hasClass(aa) && this.tooltip[0].offsetWidth > 0 && this.reposition(a) })), (f.adjust.resize || k.length) && this._bind(d.event.special.resize ? k : q, "resize", p), f.adjust.scroll && this._bind(q.add(f.container), "scroll", p) }, z._unassignEvents = function () { var c = this.options, e = c.show.target, f = c.hide.target, g = d.grep([this.elements.target[0], this.rendered && this.tooltip[0], c.position.container[0], c.position.viewport[0], c.position.container.closest("html")[0], a, b], function (a) { return "object" == typeof a }); e && e.toArray && (g = g.concat(e.toArray())), f && f.toArray && (g = g.concat(f.toArray())), this._unbind(g)._unbind(g, "destroy")._unbind(g, "inactive") }, d(function () { q(W, ["mouseenter", "mouseleave"], function (a) { var b = "mouseenter" === a.type, c = d(a.currentTarget), e = d(a.relatedTarget || a.target), f = this.options; b ? (this.focus(a), c.hasClass(Y) && !c.hasClass(aa) && clearTimeout(this.timers.hide)) : "mouse" === f.position.target && f.position.adjust.mouse && f.hide.event && f.show.target && !e.closest(f.show.target[0]).length && this.hide(a), c.toggleClass(_, b) }), q("[" + U + "]", X, o) }), y = d.fn.qtip = function (a, b, e) { var f = ("" + a).toLowerCase(), g = F, i = d.makeArray(arguments).slice(1), j = i[i.length - 1], k = this[0] ? d.data(this[0], S) : F; return !arguments.length && k || "api" === f ? k : "string" == typeof a ? (this.each(function () { var a = d.data(this, S); if (!a) return D; if (j && j.timeStamp && (a.cache.event = j), !b || "option" !== f && "options" !== f) a[f] && a[f].apply(a, i); else { if (e === c && !d.isPlainObject(b)) return g = a.get(b), E; a.set(b, e) } }), g !== F ? g : this) : "object" != typeof a && arguments.length ? void 0 : (k = h(d.extend(D, {}, a)), this.each(function (a) { var b, c; return c = d.isArray(k.id) ? k.id[a] : k.id, c = !c || c === E || c.length < 1 || y.api[c] ? y.nextid++ : c, b = r(d(this), c, k), b === E ? D : (y.api[c] = b, d.each(R, function () { "initialize" === this.initialize && this(b) }), void b._assignInitialEvents(j)) })) }, d.qtip = e, y.api = {}, d.each({ attr: function (a, b) { if (this.length) { var c = this[0], e = "title", f = d.data(c, "qtip"); if (a === e && f && f.options && "object" == typeof f && "object" == typeof f.options && f.options.suppress) return arguments.length < 2 ? d.attr(c, ca) : (f && f.options.content.attr === e && f.cache.attr && f.set("content.text", b), this.attr(ca, b)) } return d.fn["attr" + ba].apply(this, arguments) }, clone: function (a) { var b = d.fn["clone" + ba].apply(this, arguments); return a || b.filter("[" + ca + "]").attr("title", function () { return d.attr(this, ca) }).removeAttr(ca), b } }, function (a, b) { if (!b || d.fn[a + ba]) return D; var c = d.fn[a + ba] = d.fn[a]; d.fn[a] = function () { return b.apply(this, arguments) || c.apply(this, arguments) } }), d.ui || (d["cleanData" + ba] = d.cleanData, d.cleanData = function (a) { for (var b, c = 0; (b = d(a[c])).length; c++)if (b.attr(T)) try { b.triggerHandler("removeqtip") } catch (e) { } d["cleanData" + ba].apply(this, arguments) }), y.version = "3.0.3", y.nextid = 0, y.inactiveEvents = X, y.zindex = 15e3, y.defaults = { prerender: E, id: E, overwrite: D, suppress: D, content: { text: D, attr: "title", title: E, button: E }, position: { my: "top left", at: "bottom right", target: E, container: E, viewport: E, adjust: { x: 0, y: 0, mouse: D, scroll: D, resize: D, method: "flipinvert flipinvert" }, effect: function (a, b) { d(this).animate(b, { duration: 200, queue: E }) } }, show: { target: E, event: "mouseenter", effect: D, delay: 90, solo: E, ready: E, autofocus: E }, hide: { target: E, event: "mouseleave", effect: D, delay: 0, fixed: E, inactive: E, leave: "window", distance: E }, style: { classes: "", widget: E, width: E, height: E, def: D }, events: { render: F, move: F, show: F, hide: F, toggle: F, visible: F, hidden: F, focus: F, blur: F } }; var ha, ia, ja, ka, la, ma = "margin", na = "border", oa = "color", pa = "background-color", qa = "transparent", ra = " !important", sa = !!b.createElement("canvas").getContext, ta = /rgba?\(0, 0, 0(, 0)?\)|transparent|#123456/i, ua = {}, va = ["Webkit", "O", "Moz", "ms"]; sa ? (ka = a.devicePixelRatio || 1, la = function () { var a = b.createElement("canvas").getContext("2d"); return a.backingStorePixelRatio || a.webkitBackingStorePixelRatio || a.mozBackingStorePixelRatio || a.msBackingStorePixelRatio || a.oBackingStorePixelRatio || 1 }(), ja = ka / la) : ia = function (a, b, c) { return "<qtipvml:" + a + ' xmlns="urn:schemas-microsoft.com:vml" class="qtip-vml" ' + (b || "") + ' style="behavior: url(#default#VML); ' + (c || "") + '" />' }, d.extend(v.prototype, { init: function (a) { var b, c; c = this.element = a.elements.tip = d("<div />", { "class": S + "-tip" }).prependTo(a.tooltip), sa ? (b = d("<canvas />").appendTo(this.element)[0].getContext("2d"), b.lineJoin = "miter", b.miterLimit = 1e5, b.save()) : (b = ia("shape", 'coordorigin="0,0"', "position:absolute;"), this.element.html(b + b), a._bind(d("*", c).add(c), ["click", "mousedown"], function (a) { a.stopPropagation() }, this._ns)), a._bind(a.tooltip, "tooltipmove", this.reposition, this._ns, this), this.create() }, _swapDimensions: function () { this.size[0] = this.options.height, this.size[1] = this.options.width }, _resetDimensions: function () { this.size[0] = this.options.width, this.size[1] = this.options.height }, _useTitle: function (a) { var b = this.qtip.elements.titlebar; return b && (a.y === K || a.y === O && this.element.position().top + this.size[1] / 2 + this.options.offset < b.outerHeight(D)) }, _parseCorner: function (a) { var b = this.qtip.options.position.my; return a === E || b === E ? a = E : a === D ? a = new A(b.string()) : a.string || (a = new A(a), a.fixed = D), a }, _parseWidth: function (a, b, c) { var d = this.qtip.elements, e = na + s(b) + "Width"; return (c ? u(c, e) : u(d.content, e) || u(this._useTitle(a) && d.titlebar || d.content, e) || u(d.tooltip, e)) || 0 }, _parseRadius: function (a) { var b = this.qtip.elements, c = na + s(a.y) + s(a.x) + "Radius"; return da.ie < 9 ? 0 : u(this._useTitle(a) && b.titlebar || b.content, c) || u(b.tooltip, c) || 0 }, _invalidColour: function (a, b, c) { var d = a.css(b); return !d || c && d === a.css(c) || ta.test(d) ? E : d }, _parseColours: function (a) { var b = this.qtip.elements, c = this.element.css("cssText", ""), e = na + s(a[a.precedance]) + s(oa), f = this._useTitle(a) && b.titlebar || b.content, g = this._invalidColour, h = []; return h[0] = g(c, pa) || g(f, pa) || g(b.content, pa) || g(b.tooltip, pa) || c.css(pa), h[1] = g(c, e, oa) || g(f, e, oa) || g(b.content, e, oa) || g(b.tooltip, e, oa) || b.tooltip.css(e), d("*", c).add(c).css("cssText", pa + ":" + qa + ra + ";" + na + ":0" + ra + ";"), h }, _calculateSize: function (a) { var b, c, d, e = a.precedance === H, f = this.options.width, g = this.options.height, h = "c" === a.abbrev(), i = (e ? f : g) * (h ? .5 : 1), j = Math.pow, k = Math.round, l = Math.sqrt(j(i, 2) + j(g, 2)), m = [this.border / i * l, this.border / g * l]; return m[2] = Math.sqrt(j(m[0], 2) - j(this.border, 2)), m[3] = Math.sqrt(j(m[1], 2) - j(this.border, 2)), b = l + m[2] + m[3] + (h ? 0 : m[0]), c = b / l, d = [k(c * f), k(c * g)], e ? d : d.reverse() }, _calculateTip: function (a, b, c) { c = c || 1, b = b || this.size; var d = b[0] * c, e = b[1] * c, f = Math.ceil(d / 2), g = Math.ceil(e / 2), h = { br: [0, 0, d, e, d, 0], bl: [0, 0, d, 0, 0, e], tr: [0, e, d, 0, d, e], tl: [0, 0, 0, e, d, e], tc: [0, e, f, 0, d, e], bc: [0, 0, d, 0, f, e], rc: [0, 0, d, g, 0, e], lc: [d, 0, d, e, 0, g] }; return h.lt = h.br, h.rt = h.bl, h.lb = h.tr, h.rb = h.tl, h[a.abbrev()] }, _drawCoords: function (a, b) { a.beginPath(), a.moveTo(b[0], b[1]), a.lineTo(b[2], b[3]), a.lineTo(b[4], b[5]), a.closePath() }, create: function () { var a = this.corner = (sa || da.ie) && this._parseCorner(this.options.corner); return this.enabled = !!this.corner && "c" !== this.corner.abbrev(), this.enabled && (this.qtip.cache.corner = a.clone(), this.update()), this.element.toggle(this.enabled), this.corner }, update: function (b, c) { if (!this.enabled) return this; var e, f, g, h, i, j, k, l, m = this.qtip.elements, n = this.element, o = n.children(), p = this.options, q = this.size, r = p.mimic, s = Math.round; b || (b = this.qtip.cache.corner || this.corner), r === E ? r = b : (r = new A(r), r.precedance = b.precedance, "inherit" === r.x ? r.x = b.x : "inherit" === r.y ? r.y = b.y : r.x === r.y && (r[b.precedance] = b[b.precedance])), f = r.precedance, b.precedance === G ? this._swapDimensions() : this._resetDimensions(), e = this.color = this._parseColours(b), e[1] !== qa ? (l = this.border = this._parseWidth(b, b[b.precedance]), p.border && 1 > l && !ta.test(e[1]) && (e[0] = e[1]), this.border = l = p.border !== D ? p.border : l) : this.border = l = 0, k = this.size = this._calculateSize(b), n.css({ width: k[0], height: k[1], lineHeight: k[1] + "px" }), j = b.precedance === H ? [s(r.x === L ? l : r.x === N ? k[0] - q[0] - l : (k[0] - q[0]) / 2), s(r.y === K ? k[1] - q[1] : 0)] : [s(r.x === L ? k[0] - q[0] : 0), s(r.y === K ? l : r.y === M ? k[1] - q[1] - l : (k[1] - q[1]) / 2)], sa ? (g = o[0].getContext("2d"), g.restore(), g.save(), g.clearRect(0, 0, 6e3, 6e3), h = this._calculateTip(r, q, ja), i = this._calculateTip(r, this.size, ja), o.attr(I, k[0] * ja).attr(J, k[1] * ja), o.css(I, k[0]).css(J, k[1]), this._drawCoords(g, i), g.fillStyle = e[1], g.fill(), g.translate(j[0] * ja, j[1] * ja), this._drawCoords(g, h), g.fillStyle = e[0], g.fill()) : (h = this._calculateTip(r), h = "m" + h[0] + "," + h[1] + " l" + h[2] + "," + h[3] + " " + h[4] + "," + h[5] + " xe", j[2] = l && /^(r|b)/i.test(b.string()) ? 8 === da.ie ? 2 : 1 : 0, o.css({ coordsize: k[0] + l + " " + k[1] + l, antialias: "" + (r.string().indexOf(O) > -1), left: j[0] - j[2] * Number(f === G), top: j[1] - j[2] * Number(f === H), width: k[0] + l, height: k[1] + l }).each(function (a) { var b = d(this); b[b.prop ? "prop" : "attr"]({ coordsize: k[0] + l + " " + k[1] + l, path: h, fillcolor: e[0], filled: !!a, stroked: !a }).toggle(!(!l && !a)), !a && b.html(ia("stroke", 'weight="' + 2 * l + 'px" color="' + e[1] + '" miterlimit="1000" joinstyle="miter"')) })), a.opera && setTimeout(function () { m.tip.css({ display: "inline-block", visibility: "visible" }) }, 1), c !== E && this.calculate(b, k) }, calculate: function (a, b) { if (!this.enabled) return E; var c, e, f = this, g = this.qtip.elements, h = this.element, i = this.options.offset, j = {};
